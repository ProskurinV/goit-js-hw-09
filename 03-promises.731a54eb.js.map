{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QACpC,IAAIC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBA4BpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAEpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,GAAQ,GAE5BA,EAAM,G,CAnCbR,EAAKgB,iBAAiB,UAEtB,SAAsBC,GAKpB,GAJAA,EAAMC,iBACNf,EAAQgB,OAAOF,EAAMG,cAAcL,MAAMM,OACzCjB,EAAOe,OAAOF,EAAMG,cAAcE,KAAKD,OACvChB,EAASc,OAAOF,EAAMG,cAAcG,OAAOF,OACvClB,GAAS,GAAKC,GAAQ,GAAKC,EAAS,EACtC,IAAK,IAAImB,EAAW,EAAGA,GAAYnB,EAAQmB,GAAY,EACrDlB,EAAckB,EAAUrB,GACrBsB,MAAK,EAAClB,SAAEA,EAAUQ,MAAAW,MACjBC,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBtB,QAAiBmB,MAAU,IAGnDI,OAAM,EAACvB,SAAEA,EAAUQ,MAAAgB,MAClBJ,EAAA7B,GAAS8B,OAAOI,QACd,sBAAoBzB,QAAewB,MAAU,SAKrDJ,EAAA7B,GAAS8B,OAAOK,QAAQ,gB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nlet delay = document.querySelector('input[name=\"delay\"]');\nlet step = document.querySelector('input[name=\"step\"]');\nlet amount = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  delay = Number(event.currentTarget.delay.value);\n  step = Number(event.currentTarget.step.value);\n  amount = Number(event.currentTarget.amount.value);\n  if (delay >= 0 && step >= 0 && amount > 0) {\n    for (let position = 0; position <= amount; position += 1) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  } else {\n    Notiflix.Notify.warning('Put value > 0');\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","event","preventDefault","Number","currentTarget","value","step","amount","position1","then","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure","warning"],"version":3,"file":"03-promises.731a54eb.js.map"}